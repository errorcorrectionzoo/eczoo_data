#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: reed_solomon
physical: q-ary_digits
logical: q-ary_digits

name: 'Reed-Solomon code'
introduced: '\cite{doi:10.1137/0108018}'

description: |
  An \([n,k,n-k+1]_q\) linear code based on polynomials over \(GF(q)\). Let \(\{\alpha_1,\cdots,\alpha_n\}\) be \(n\) distinct nonzero elements of \(GF(q)\) with \(q>n\). Encodes \(\mu=\{\mu_0,\cdots,\mu_{k-1}\}\) into \(\{f_\mu(\alpha_1),\cdots,f_\mu(\alpha_n)\}\), with polynomial
  \begin{align}
  f_\mu(x)=\mu_0+\mu_1 x + \cdots + \mu_{k-1}x^{k-1}.
  \end{align}

protection: 'Corrects erasures on \(n-k\) coordinates.'

features:
  decoders:
    - 'Berlekamp-Welch decoder \cite{manual:{E. R. Berlekamp and L. Welch, Error Correction of Algebraic Block Codes. U.S.
Patent, Number 4,633,470 1986.}}, assuming that \(t \geq (n+k)/2\).'
    - 'Gao decoder using extended Euclidean algorithm \cite{\manual:{S. Gao, "A new algorithm for decoding Reed-Solomon codes." Communications, information and network security. Springer, Boston, MA, 2003. 55-68.}}.'
    - 'Sudan list decoding algorithm, up to \(1-\sqrt{2R}\) errors \cite{\manual:{M. Sudan, “Decoding Reed-Solomon codes beyond the error-correction bound,” Journal of Complexity, vol. 13, no. 1, pp. 180–193, 1997.}}'
    - 'Sudan–Guruswami list decoding algorithm, up to \(1-\sqrt{R}\) errors \cite{\manual:{V. Guruswami and M. Sudan, “Improved decoding of Reed-Solomon and algebraic-geometric codes,” IEEE Transactions on Information Theory, vol. 45, pp. 1757–1767, 1999.}}'
#notes:
#  - ''

realizations:
  - 'Cross-interleaved Reed-Solomon code(CIRC) is adopted in Compact Discs(CDs) and Reed Solomon Product Code(RSPC) in DVDs, \cite{\manual:{Stephen B. Wicker; Vijay K. Bhargava, "Reed-Solomon Codes and the Compact Disc," in Reed-Solomon Codes and Their Applications , IEEE, 1994, pp.41-59, doi: 10.1109/9780470546345.ch4.}}'
  - 'In DSL technologies and its variants against impluse noise\cite{\manual:{D. Zhang, K. Ho-Van and T. Le-Ngoc, "Impulse noise detection techniques for retransmission to reduce delay in DSL systems," 2012 IEEE International Conference on Communications (ICC), 2012, pp. 3160-3164, doi: 10.1109/ICC.2012.6364040}}'
  - 'Reed-Solomon codes as outer codes concatenated with convolutional codes are used indirectly in solar exploration programs \cite{\manual:{Stephen B. Wicker; Vijay K. Bhargava, "Reed-Solomon Codes and the Exploration of the Solar System - This chapter was written at the California Institute of Technology''s Jet Propulsion Laboratory, under Contract with the National Aeronautics and Space Administration.," in Reed-Solomon Codes and Their Applications , IEEE, 1994, pp.25-40, doi: 10.1109/9780470546345.ch3.}}'
  - 'Correcting pooled testing results for SARS-CoV-2 \cite{doi:10.1126/sciadv.abc5961}.'
  - 'Coded Sharding designs in blockchains to increase efficiency \cite{arxiv.org/pdf/1809.10361}'
  - 'Private Information Retrieval \cite{\manual:{B. Sasidharan and E. Viterbo, "Private Data Access in Blockchain Systems Employing Coded Sharding," 2021 IEEE International Symposium on Information Theory (ISIT), 2021, pp. 2684-2689, doi: 10.1109/ISIT45174.2021.9517900}}'
  - 'Used in QR-Codes to retrieve damaged barcodes \cite{\manual:{International Organization for Standardization, Information Technology: Automatic Identification and Data Capture Techniques-QR Code 2005 Bar Code Symbology Specification, 2nd ed., IEC18004 (ISO, 2006).}}'
  - 'Wireless communications, 3G, DVB, WiMAX \cite{\manual:{I. Shakeel, M. O. Hasna, A. Abu-Dayya and A. Ghrayeb, "Reed-Solomon coding for cooperative wireless communication," 21st Annual IEEE International Symposium on Personal, Indoor and Mobile Radio Communications, 2010, pp. 1021-1026, doi: 10.1109/PIMRC.2010.5672091.}}'
notes:
  - 'List decoders try to find a low-degree bivariate polynomial \(Q(x,y)\) such that evaluation of \(Q\) at \((\alpha_i,y_i)\) is zero. By choosing proper degrees, it can be shown such polynomial exists by drawing an analogy between evaulation of \(Q(\alpha_i,y_i)\) and homogenous linear equation(interpolation). Once this is done, list roots of \(y\) that agree at \(\geq t\) points.'
  - 'By Singleton bound any \(q\)-ary linear code satisfies \(d\leq n-k+1\) since deleting \(d-1\) coordinates do not result in collisions, i.e. \(q^{k}\leq q^{n-(d-1)}\). Moreover, number of zero coordinates of Reed-Solomon codes, \(n-d \leq k-1\) since \(f\in \mathcal{P}_k\), where \(\mathcal{P}_k\) denotes polynomials of degree less than \(k\). Hence, Reed-Solomon codes have d=n-k+1.'
  - 'If \(f\in \mathcal{P}_k\) with \(k<q\), then \(\sum_{\alpha\in\mathbb{F}_q}f(\alpha)=0\) which implies Reed-Solomon codes are odd-like. Hence, by adding a parity check coordinate with evaluation point \(\alpha_0=0\), distance increases to \(\hat{d}=d+1\). As a result, extension is MDS and called \([q,k,q-k+1]\) extended Reed-Solomon codes.'
  - 'Parvaresh–Vardy list decoding algorithm using variants of Reed-Solomon codes with correlated polynomials goes beyond \(1-\sqrt{R}\) radius \cite{\manual:{F. Parvaresh and A. Vardy, “Correcting errors beyond the Guruswami-Sudan radius in polynomial time,” 46th Annual IEEE Symposium on Foundations of Computer Science (FOCS’05), pp. 285–294, 2005.}}'
  - 'Guruswami–Rudra achieved list decoding capacity of radius \(1-R-\epsilon\) by bundling plain Reed-Solomon codes: folded Reed Reed-Solomon codes \cite{\manual:{V. Guruswami and A. Rudra, “Explicit Codes Achieving List Decoding Capacity: Error- Correction With Optimal Redundancy,” IEEE Transactions on Information Theory 54(1): 135-150 (2008.)}}'
  - '\([n,k,n-k+1]\) Reed Solomon code requires \(\mathcal{O}(n^2)\) operations while encoding if a straightforward matrix multiplication is employed and \(k=\mathcal{O}(n)\). Using FFT algorithm, complexity of evaluating a polynomial at \(n\) roots of unity becomes \(\mathcal{O}(n\log n)\). FFT can be generalized to finite fields and rings, which is referred as Number-theoretic Transform (NTT).  However, for some values of \(n\), which can not be factorized into small primes or do not have \(n\) roots of unity, FFT algorithm fails. Independently developed by \cite{\manual:{Y. Wang and X. Zhu, "A fast algorithm for the Fourier transform over finite fields and its VLSI implementation," in IEEE Journal on Selected Areas in Communications, vol. 6, no. 3, pp. 572-577, April 1988, doi: 10.1109/49.1926.}} \cite{\manual:{Gantor, D. G. (1989). On arithmetical algorithms over finite fields. Journal of Combinatorial Theory, Series A, 50, 285–300.}} and generalized by \cite{\manual:{J. Von zur Gathen and J. Gerhard, Modern Computer Algebra. Cambridge, U.K.: Cambridge Univ. Press, 2003, ISBN: 0 521 82646 2.}}, additive FFT solves this problem by evaluating the polynomial at \(n-1\) roots of unity when \(n\) is power of 2.'
  - 'Although using iFFT has its counterpart iNNT for finite fields, the decoding is usually standard polynomial interpolation in \(k=\mathcal{O}(n\log (n^2))\). However, in erasure decoding, encoded values are only erased in \(r\) points, which is a specific case of polynomial interpolation and can be done in \(\mathcal{O}(n\log (n)\) by computing product of received polynomial and erasure locator polynomial and using long division to find original polynomial. Long division step can be omitted to increase speed further by only dividing the derivative of the product polynomial, and derivative of erasure locator polynomial evaluated at erasure locations.'
  - 'McEliece Public Key Cryptosystem \cite{\manual:{McEliece, R.J.: A public-key cryptosystem based on algebraic coding theory. DSN Progress Report pp. 114–116 (1978).}} uses Algebraic Coding Theory to secure communications against eavesdropping attack, in which private keys are generator matrices of linear codes, i.e., \(G\). Public Keys shared to outside world are scrambled and permutated versions of \(G\), i.e., \(G^\prime=SGP\). Data to be encrypted, \(\bm{u}\), is multiplied by public key and added intentional errors \(\bm{e}\), i.e., \(x=\bm{u}G^\prime+\bm{e}\). Upon receiving encrypted data, private key owner can apply inverse permutation \(P^{-1}\) to \(\bm{x}\), decode the scrambled message given the presence of \(e\) errors and finally unscramble to obtain \(\bm{u}\). Security parameters of the system are \(n\) and \(e\), hence MDS codes, such as generalized Reed-Solomon codes may provide same security level for shorter key sizes and private key owner can decode arguably fast enough using known decoding algorithms.'
  - 'Initial construction of McEliece Public Key Cryptosystem was based on Goppa codes which are subfield subcode of GRS codes. Public Key Cryptosystem designs based on Generalized Reed-Solomon codes first proposed by Niederreiter \cite{\manual:{H. Niederreiter. Knapsack-type cryptosystems and algebraic coding theory. Prob- lems Control Inform. Theory, 15(2):159–166, 1986.}} which replaced generator matrix with parity check matrix, were proven to be insecure \cite{\manual:{V.M. Sidelnikov and S.O. Shestakov. On the insecurity of cryptosystems based on generalized Reed-Solomon codes. Discrete Math. Appl., 1(4):439–444, 1992.}} since public key exposes algebraic structure of Reed-Solomon code. More recent works focuses on methods to mask the algebraic structure using subcodes of generalized Reed-Solomon codes \cite{\manual:{T. P. Berger and P. Loidreau, “How to Mask the Structure of Codes for a Cryptographic Use,” Designs, Codes and Cryptography, vol. 35, pp. 63–79, 2005.}}. Lately a key-recovery attack was developed in \cite{arxiv.org/abs/1307.6458} for a variant of masking method proposed by \cite{arxiv.org/abs/1108.2462}.'
  relations:
  parents:
    - code_id: generalized_reed_solomon
    - code_id: mds
    - code_id: hermitian
      detail: 'Every Reed-Solomon code is MDS. If \(k \leq p\) then all MDS codes \( [n,k,n-k+1]_{p^m} \) are Reed-Solomon codes \cite{doi:10.4171/JEMS/316}.'
  cousins:
    - code_id: hamming
      detail: ''
    - code_id: cyclic
      detail: 'Reed-Solomon codes are cyclic whenever the length divides \(q-1\).'
