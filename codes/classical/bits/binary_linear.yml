#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: binary_linear
physical: bits
logical: bits

name: 'Linear binary code'
#introduced: ''

description: |
  An \((n,2^k,d)\) linear code is denoted as \([n,k]\) or \([n,k,d]\), where \(d\) is the code's distance. Its codewords form a linear subspace, i.e., for any codewords \(x,y\), \(x+y\) is also a codeword. A code that is not linear is called \textit{nonlinear}.

  Linear codes can be defined in terms of a \textit{generator matrix} \(G\), whose rows form a basis for the \(k\)-dimensional codespace. Given a message \(x\), the corresponding encoded codeword is \(G^T x\). The generator matrix can be reduced via coordinate permutations to its \textit{standard form} or \textit{systematic form} \(G = [I_k~A]\), where \(I_k\) is a \(k\times k\) identity matrix and \(A\) is a \(k \times (n-k)\) binary matrix.

  The \textit{automorphism group} of a linear binary code is the largest subgroup of coordinate permutations that maps the code onto itself.
  Two linear binary codes are \textit{equivalent} if the codewords of one code can be mapped into those of the other under a permutation \cite[Ch. 8]{preset:MacSlo}\cite[Ch. 3]{doi:10.1007/978-1-4757-6568-7}.

protection: |
  Distance \(d\) of a linear code is the number of nonzero entries in the (nonzero) codeword with the smallest such number. Corrects any error set for which no two elements of the set add up to a codeword.

  Linear codes admit a \textit{parity check matrix} \(H\), whose columns make up a set of \textit{parity checks}, i.e., a maximal linearly independent set of vectors that are in the kernel of \(G\). It follows that
  \begin{align}
    G H^{\text{T}} = 0 \mod 2~.
  \end{align}

  The decision problem corresponding to finding the minimum distance is also \(NP\)-complete \cite{doi:10.1109/18.641542}, and approximating the weight enumerator is \(\#P\)-complete \cite{arxiv:cs/0304044}.

  There are several standard procedures for increasing or decreasing the length of an \([n,k,d]\) code \cite[Ch. 1]{preset:MacSlo}:
  \begin{enumerate}[(1)]
  \item \textit{Puncturing}: removing a coordinate to yield a code whose length is shorter by one and whose distance is \(\geq d-1\).
  \item \textit{Expurgating}: removing odd-weight codewords of a non-even-weight code to yield a code whose dimension is \(k-1\).
  \item \textit{Augmenting}: adding the all-ones codeword to a code without it to yield a code whose dimension is \(k+1\).
  \item \textit{Lengthening}: adding a the all-ones codeword and then adding a parity check to yield a code whose size and dimension increase by one.
  \item \textit{Shortening}: keeping only codewords which have a zero in a fixed coordinate and removing that coordinate to yield a code whose length is shorter by one.
  \end{enumerate}

features:
  rate: |
    A family of linear codes \(C_i = [n_i,k_i,d_i]\) is \textit{asymptotically good} if the asymptotic rate \(\lim_{i\to\infty} k_i/n_i\) and asymptotic distance \(\lim_{i\to\infty} d_i/n_i\) are both positive. Nearly all good linear binary codes for the asymmetric channel are also good for the symmetric channel \cite{manual:{Varshamov, R. R. "Some features of linear codes that correct asymmetric errors." Soviet Physics Doklady. Vol. 9. 1965.}}; this is not the case for non-binary codes \cite{arxiv:1310.7536}.

    Binary linear codes on \(D\)-dimensional Euclidean lattices are limited by the \textit{classical Bravyi-Poulin-Terhal (BPT) bound} \cite{arxiv:0909.5200,arxiv:2309.16411}, which states that \(d = O(n^{1-1/D})\) and that \(k d^{1/D} = O(n)\) (using \hyperref[topic:asymptotics]{asymptotic notation}). 
    This bound is the classical analogue of the \hyperref[topic:bpt-bound]{BPT bound} for qubit stabilizer codes and the \hyperref[topic:subsystem-bt-bound]{subsystem BT bound} for subsystem qubit stabilizer codes.


  decoders:
    - 'Decoding an arbitary linear binary code is \(NP\)-complete \cite{doi:10.1109/TIT.1978.1055873}.'
    - 'Slepian''s standard-array decoding \cite{doi:10.1002/j.1538-7305.1960.tb03958.x}.'
    - 'Recursive maximum likelihood decoding \cite{arxiv:1408.1310}.'
    - 'Deep learning \cite{arxiv:1607.04793} and a transformer graph neural net (GNN) for soft decoding \cite{arxiv:2203.14966}.'
    - 'Chase decoding, which uses channel measurement information \cite{doi:10.1109/TIT.1972.1054746}.'
# Decoding being NP hard is discussed in Bruss Leuchs

notes:
  - 'Tables of bounds and examples of linear codes for various \(n\) and \(k\), extending code tables by A. E. Brouwer \cite{manual:{Andries E. Brouwer, Bounds on linear codes, in: Vera S. Pless and W. Cary Huffman (Eds.), Handbook of Coding Theory, pp. 295-461, Elsevier, 1998.}}, are maintained by M. Grassl at this \href{https://codetables.markus-grassl.de/}{website}.'

relations:
  parents:
    - code_id: binary_group_orbit
      detail: 'The set of codewords of a binary linear code can be thought of as an orbit of a particular codeword under the translation group formed by the code \cite[Thm. 8.4.2]{preset:EricZin}.
      However, binary group-orbit codes do not have to be linear; see \cite[Remark 8.4.3]{preset:EricZin}.'
    - code_id: q-ary_linear
      detail: 'Linear binary codes are linear \(q\)-ary codes for \(q=2\).'
    - code_id: q-ary_linear_over_zq
      detail: 'Linear binary codes are linear \(q\)-ary codes over \(\mathbb{Z}_q\) for \(q=2\).'
  cousins:
    - code_id: frustration_free
      detail: 'Parity-check constraints defining a binary linear code can be encoded into a classical Ising model Hamiltonian, a commuting-projector model whose terms contain produts of Pauli \(Z\) matrices participating in each parity check.
      Such Ising models are also frustration-free since the codewords satisfy all parity checks.'
    - code_id: commuting_projector
      detail: 'Parity-check constraints defining a binary linear code can be encoded into a classical Ising model Hamiltonian, a commuting-projector model whose terms contain produts of Pauli \(Z\) matrices participating in each parity check.
      Such Ising models are also frustration-free since the codewords satisfy all parity checks.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-09-16'
    - user_id: VictorVAlbert
      date: '2022-03-21'
