#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: bits_into_bits
physical: bits

name: 'Binary code'
#introduced: ''

description: |
  Encodes \(K\) states (codewords) in \(n\) binary coordinates and has distance \(d\). Usually denoted as \((n,K,d)\). The distance is the minimum Hamming distance between a pair of distinct codewords.

protection: |
  A binary code \(C\) \textit{corrects} \(t\) errors in the Hamming distance if
  \begin{align}
    \forall x \in C~,~D(x,x+y) < D(x' , x+y)
  \end{align}
  for all codewords \(x' \neq x\) and all \(y\) such that \(|y|=t\), where \(D\) is the \textit{Hamming distance} and \(|y| = D(y,0) \). A code corrects \(t\) errors if and only if \(d \geq 2t+1\), i.e., a code corrects errors on \(t \leq \left\lfloor (d-1)/2 \right\rfloor\) coordinates.
  The number of correctable errors is called the \textit{decoding radius}, and it is upper bounded by half of the distance.
  In addition, a code detects errors on up to \(d-1\) coordinates, and corrects erasure errors on up to \(d-1\) coordinates.

  Performance of binary codes can also be measured with respect to deletions and insertions of bits into the codewords. In this case, the metric measuring distance of an error word to the nearest codeword is the \textit{deletion distance}: given vectors \(u,v\), this distance is one-half the smallest number of deletions and insertions needed to change \(u\) to \(v\). A code \(C\) corrects \(e\) delections if all codewords are separated by at least \(e+1\) in the deletion distance \cite{arxiv:math/0207197}.

features:
  rate: The rate of a binary code is usually defined as \(R=\frac{1}{n}\log_{2}K\) bits per symbol.

  decoders:
    - 'For few-bit codes (\(n\) is small), decoding can be based on a lookup table. For infinite code families, the size of such a table scales exponentially with \(n\), so approximate decoding algorithms scaling polynomially with \(n\) have to be used. The decoder determining the most likely error given a noise channel is called the \textit{maximum-likelihood decoder}.'
    - 'Given a received string \(x\) and an error bound \(e\), a \textit{list decoder} returns a list of all codewords that are at most \(e\) from \(x\) in Hamming distance. The number of codewords in a neighborhood of \(x\) has to be polynomial in \(n\) in order for this decoder to run in time polynomial in \(n\).'


relations:
  parents:
    - code_id: q-ary_digits_into_q-ary_digits


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-07-06'
    - user_id: VictorVAlbert
      date: '2022-02-16'
    - user_id: VictorVAlbert
      date: '2021-10-29'
