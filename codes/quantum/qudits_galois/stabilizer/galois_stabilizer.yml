#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: galois_stabilizer
physical: galois
logical: galois

name: 'Galois-qudit stabilizer code'
introduced: '\cite{doi:10.1109/18.959288,arXiv:quant-ph/0508070}'

description: |
  An \(((n,K,d))_q\) Galois-qudit code whose logical subspace is the joint eigenspace of commuting Galois-qudit Pauli operators forming the code's stabilizer group \(\mathsf{S}\). Traditionally, the logical subspace is the joint \(+1\) eigenspace, and the stabilizer group does not contain \(e^{i \phi} I\) for any \(\phi \neq 0\). The distance \(d\) is the minimum weight of a Galois-qudit Pauli string that implements a nontrivial logical operation in the code.

  A Galois-qudit stabilizer code encoding an integer number of qudits (\(K=q^k\)) is denoted as \([[n,k]]_q\) or \([[n,k,d]]_q\). This notation differentiates between Galois-qudit and modular-qudit \([[n,k,d]]_{\mathbb{Z}_q}\) stabilizer codes, although the same notation is usually used for both. Galois-qudit stabilizer codes need not encode an integer number of qudits, with \(K=q^{n-\frac{r}{m}}\), where \(r\) is the number of generators of the stabilizer group, and \(q=p^m\) given prime \(p\) for all Galois qudits. As a result, \([[n,k,d]]\) notation is often used with non-integer \(k=\log_q K\).

  \begin{defterm}{Galois symplectic representation}
  \label{topic:galois-symplectic-representation}
  The single Galois-qudit Pauli string \(X_{a} Z_{b}\) for \(a,b\in GF(q)\) is converted to the vector \(a|b\).
  The multi Galois-qudit version follows naturally.
  \end{defterm}

  A pair of Galois-qudit stabilizers on \(n\) Galois qudits with symplectic representation vectors \((a|b)\) and \((a^{\prime}|b^{\prime})\) commute iff their \textit{trace symplectic inner product} is zero,
  \begin{align}
  \text{tr}(a \cdot b^{\prime} - a^{\prime}\cdot b) = \sum_{j=1}^{n} \text{tr}(a_j b^{\prime}_j - a^{\prime}_i b_i) = 0~.
  \end{align}
  Symplectic representations of stabilizer group elements form a trace-symplectic self-orthogonal linear code over \(GF(q)^{2n}\).
  The trace-symplectic inner product reduces to the \textit{symplectic inner product} when the trace is removed, and a symplectic self-orthogonal set of vectors is automatically trace-symplectic self-orthogonal.

  Another correspondence between Galos-qudit Pauli matrices and elements of the Galois field \(GF(q^2)\) yields the one-to-one correspondence between Galois-qudit stabilizer codes and trace-alternating self-orthogonal additive codes over \(GF(q^2)\) \cite{arXiv:quant-ph/0508070}.

  \begin{defterm}{\(GF(q^2)\) representation}
  \label{topic:gfqsq-representation}
  An \(n\)-qubit Galois-qudit Pauli stabilizer can be represented as a length-\(n\) vector over \(GF(q^2)\) using the one-to-one correspondence between the \(q^2\) Galois-qudit Pauli matrices and elements of \(GF(q^2)\).
  \end{defterm}

  The sets of \(GF(q^2)\)-represented vectors for all generators yield a trace-alternating self-orthogonal additive code over \(GF(q^2)\).


# More generally, any additive classical code whose self-orthogonality under some inner product (such as Hermitian, Euclidean, or symplectic) implies trace-symplectic self-orthogonality of an equivalent code can be used to construct a Galois-qudit stabilizer code (see children).

#  Each code can be represented by a stabilizer generator matrix \(H=(A|B)\), where each row \((a|b)\) is the \(GF(q)\)-valued symplectic representation of a stabilizer generator. # Leonid comment: "Usually, if the group is additive, we have to list all generators explicitly.  But if it is linear over some field F (subfield of F_q or F_q itself) we may list the generators as would be expected for that group -fewer of them, as the number of generators is the rank of the matrix over that field (or additive rank).  All may have different values.  I think the explicit specification is needed to reduce any confusion."

#         'An \(((n,q^k,d))_q\) stabilizer code is denoted as \([[n,k]]_q\) or \([[n,k,d]]_q\), where \(d\) is the code''s distance and \(q=p^m\).
#The {\(GF(q)\)} stabilizer of \(Q\) is the set \(S(Q) = \{M \in P_n(q)|\, |\psi\rangle\) is a generalized eigenvector of  \(M\) with generalized eigenvalue 0 \(\forall |\psi\rangle \in Q\}  \).
#\(S\) is \(GF(q)\) stabilizer if it is Abelian and if \(e^{i\phi}I \notin S\) for any phase \(\phi \ne 0\).
#The code space of \(GF(q)\) stabilizer \(S\) is the subspace \(\mathcal{T}(S) = \{|\psi \rangle \, \mathrm{s.t.}\, M|\psi\rangle = |\psi \rangle,\, \forall M\in S \}.  \)
#The normalizer \(N(S)\) of the stabilizer \(S\) is \(N(S) = \{ N \in P|NM=MN, \, \forall M\in S\}\).


# Logical subspace is the joint \(+1\) eigenspace of a set of \(p^{n-k}\) commuting qudit Pauli operators forming the code''s stabilizer group, which cannot contain \(-I\). The distance is the minimum weight of an error that implements a nontrivial logical operation in the code.'
# Galois qudit codes have lifted stabiilizers, generally k=n-r/m; see Gottesmna's talk

protection: 'Detects errors on up to \(d-1\) qudits, and corrects erasure errors on up to \(d-1\) qudits. Corrects errors on \(\left\lfloor (d-1)/2 \right\rfloor\) qudits.'

features:
  encoders:
    - 'Encoder with \(O(n^2)\) gates can be determined in classical runtime of order \(O(n^3)\) \cite{arxiv:quant-ph/0211014}.'
  general_gates:
    - 'As opposed to modular qudits for composite \(q\), Galois qudits inherit most of the properties of the prime-qudit Clifford group due to the correspondence between a \(q=p^m\) Galois qudit and \(m\) prime qudits of dimension \(p\) \cite{doi:10.1109/18.959288}.'

notes:
  - 'The number of Galois-qudit stabilizer codes was determined in Ref. \cite{arxiv:quant-ph/0602001}.'

relations:
  parents:
    - code_id: non_stabilizer
      detail: 'A non-stabilizer code is also a stabilizer code if its Fourier description \(\mathsf{B}\) is a subgroup of some Gottesman subgroup \(\mathsf{S}\). When \(\mathsf{B}\) is just a subset, the code is explicitly not a stabilizer code.'
    - code_id: stabilizer
  cousins:
    - code_id: qudit_stabilizer
      detail: 'Recalling that \(q=p^m\), Galois-qudit stabilizer codes can also be treated as prime-qudit stabilizer codes on \(mn\) qudits, giving \(k=nm-r\) \cite{doi:10.1109/18.959288}. The case \(m=1\) reduces to conventional prime-qudit stabilizer codes on \(n\) qudits.'
    - code_id: q-ary_additive
      detail: 'Galois-qudit stabilizer codes are the closest quantum analogues of additive codes over \(GF(q)\) because addition in the field corresponds to multiplication of stabilizers in the quantum case.'
    - code_id: dual_additive
      detail: 'Galois-qudit stabilizer codes are in one-to-one correspondence with trace-symplectic self-orthogonal additive codes of length \(2n\) over \(GF(q)\) via the \hyperref[topic:galois-symplectic-representation]{Galois symplectic representation} \cite{doi:10.1109/18.959288}.
      They are also in one-to-one correspondence with trace-alternating self-orthogonal additive codes of length \(n\) over \(GF(q^2)\) via the \hyperref[topic:gfqsq-representation]{\(GF(q^2)\) representation}.'

# Moreover, any additive code whose self-orthogonality under some inner product (such as Hermitian, Euclidean, or symplectic) implies trace-symplectic self-orthogonality of an equivalent code can be used to construct a Galois-qudit stabilizer code.

#For example, an additive code of length \(n\) over \(GF(q^2)\) that is self-orthogonal with respect to the trace-alternating inner product corresponds to \hyperref[code:stabilizer_over_gfqsq]{stabilizer-over-\(GF(q^2)\)} representations of an \(n\) Galois-qudit stabilizer group \cite{arxiv:quant-ph/0508070}.


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-07-22'
    - user_id: VictorVAlbert
      date: '2022-04-13'
    - user_id: LeonidPryadko
      date: '2022-04-13'
    - user_id: VictorVAlbert
      date: '2022-01-12'
    - user_id: QingfengKeeWang
      date: '2022-01-07'
