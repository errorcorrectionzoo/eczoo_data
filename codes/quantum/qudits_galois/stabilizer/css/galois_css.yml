#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: galois_css
physical: galois
logical: galois

name: 'Galois-qudit CSS code'
introduced: '\cite{arxiv:quant-ph/9512032,doi:10.1103/PhysRevLett.77.793,arxiv:quant-ph/9601029,arxiv:quant-ph/9608049,arxiv:quant-ph/9911011,arxiv:quant-ph/0312164,doi:10.1016/j.disc.2007.08.038}'

alternative_names:
  - 'Euclidean code'

description: |
  An \([[n,k,d]]_q \) Galois-qudit true stabilizer code admitting a set of stabilizer generators that
  are either \(Z\)-type or \(X\)-type Galois-qudit Pauli strings.
  Codes can be defined from chain complexes over \(\mathbb{F}_q\) via an extension of \hyperref[topic:CSS-to-homology-correspondence]{qubit CSS-to-homology correspondence} to Galois qudits.

  The stabilizer generator matrix \cite[Def. 2]{arxiv:quant-ph/0211014}, taking values from \(\mathbb{F}_q\), is of the form
  \begin{align}
  H=\begin{pmatrix}0 & H_{Z}\\
  H_{X} & 0
  \end{pmatrix}
  \label{eq:parityg}
  \end{align}
  such that the rows of the two blocks must be orthogonal
  \begin{align}
  H_X H_Z^T=0~.
  \label{eq:commG}
  \end{align}
  The above condition guarantees that the \(X\)-stabilizer generators, defined in the \hyperref[topic:galois-symplectic-representation]{Galois symplectic representation} as rows of \(H_X\), commute with the \(Z\)-stabilizer generators associated with \(H_Z\).

  Encoding is based on two related \hyperref[code:q-ary_linear]{\(q\)-ary linear codes},
  an \([n,k_X,d_X]_q \) code \(C_X\) and \([n,k_Z,d_Z]_q \) code \(C_Z\),
  satisfying \(C_X^\perp \subseteq C_Z\).
  The resulting CSS code has \(k=k_X+k_Z-n\) logical Galois qudits and distance \(d\geq\min\{d_X,d_Z\}\).
  The \(H_X\) (\(H_Z\)) block of \(H\) \eqref{eq:parityg} is the parity-check matrix of the code \(C_X\) (\(C_Z\)). The requirement \(C_X^\perp \subseteq C_Z\) guarantees \eqref{eq:commG}.
  Specializing to the case when \(C_Z=[n,k,d]_q\) is dual-containing yields a \([[n,2k-n,\geq d_Z]]_q\) \textit{self-dual Galois-qudit CSS code} with \(C_X = C_Z\).
  Basis states for the code are, for coset representatives \(\gamma \in C_X/C_Z^\perp\),
  \begin{align}
  |\gamma + C_Z^\perp \rangle = \frac{1}{\sqrt{|C_Z^\perp|}} \sum_{\eta \in C_Z^\perp} |\gamma + \eta\rangle.
  \end{align}

  Galois-qudit CSS codes can also be understood in terms graphs via the \textit{reflexive stabilizer} framework, which also allows one to define a code for a given set of Pauli errors \cite{arxiv:2110.08414}.

protection: |
  Detects errors on \(d-1\) qubits, corrects errors on \(\left\lfloor (d-1)/2 \right\rfloor\) qubits.
  A quantum version of the Griesmer bound has been derived for Galois-qudit CSS codes \cite{arxiv:0812.2674}.

  An \([[n,k,d]]_q\) CSS code can be propagated to an \([[n-2,k,d-1]]_q\) code \cite{arxiv:2208.05353}.

features:
  encoders:
    - 'Fault-tolerant encoding \cite{arxiv:0712.3223}.'

relations:
  parents:
    - code_id: galois_true_stabilizer
      detail: 'Galois-qudit CSS codes are true stabilizer codes \cite{preset:GottesmanBook}.'
    - code_id: css
  cousins:
    - code_id: q-ary_linear
      detail: 'The Galois-qudit CSS construction uses two related \(q\)-ary linear codes, \(C_X\) and \(C_Z\).'
    - code_id: q-ary_cyclic
      detail: 'Galois CSS codes can be constructed using self-orthogonal \(q\)-ary cyclic codes \cite{arxiv:1608.06674}.'
    - code_id: griesmer
      detail: 'A quantum version of the Griesmer bound has been derived for Galois-qudit CSS codes \cite{arxiv:0812.2674} and Galois-qudit stabilizer codes \cite{doi:10.1109/JSAIT.2025.3562287}.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-09-28'
    - user_id: LeonidPryadko
      date: '2022-02-16'
    - user_id: DanielGottesman
      date: '2022-02-16'
    - user_id: VictorVAlbert
      date: '2022-02-16'
    - user_id: QingfengKeeWang
      date: '2022-01-07'
