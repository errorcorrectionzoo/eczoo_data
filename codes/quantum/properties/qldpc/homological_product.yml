#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: homological_product
physical: qubits
logical: qubits

name: 'Homological product code'
introduced: '\cite{arXiv:1301.1363,arXiv:1311.0885}'

description:  |
  CSS code formulated using the \hyperref[code:css]{CSS chain-complex} construction in the homological product construction. Stub.

#  In the single-sector homological product code, each base code is associated with the chain complex \( C_a \longrightarrow C_a\longrightarrow C_a\) such that the boundary operator satisfies \(\partial_{a}^{2}=0\). The image \(im\partial\) form the parity check space and any set of basis for this space can be viewed as Z-type stabilizer group generators. The same rule holds for \(im\partial^{T}\), which gives X-type stabilizer generators. Conversely, \(ker\partial\setminus im\partial\) (or \(\partial^{T}\)) correspond to all undetectable errors of Z-type(X-type). Finally, the Z-type logical operators are just elements in the homological group \(ker\partial/im\partial\) and X-type logical operators are just elements in the cohomological group \(ker\partial^{T}/im\partial^{T}\).

#For two chain complexes, the product complex is \( C_1\otimes C_2 \longrightarrow C_1\otimes C_2\longrightarrow C_1\otimes C_2\). The boundary operator is now \(\partial_1\otimes I_2+I_1\otimes \partial_2\).

#For simplicity, Ref. \cite{arXiv:1311.0885} used two codes with the same \(n,k\). The boundary operator \(\delta_1\) and \(\delta_2\) are selected from a random ensemble of boundary operators, with uniform probability distribution. To be precise, the boundary operator \(\delta_a\) can be represented by the form \(\delta_a=U_a \delta_0 U_a^{-1}\) where \(U_a\) is a random \(n\times n\) invertible matrix selected from all possible invertible matrices with uniform distribution and \(\delta_0\) is the canonical form \cite{arXiv:1311.0885}.

protection: 'Given two codes \([[n_a, k_a, d_a, w_a]]\) for \(a\in\{1,2\}\), where \(w_a\) denotes the maximum hamming weight of all rows and columns of \(\partial_a\), the homological product code has parameter \([[n=n_1 n_2, k=k_1 k_2, d\leq d_1 d_2, w\leq w_1+w_2]]\). From this formula, and the fact that a randomly selected boundary operator \(\partial\) yields a CSS code that is good with high probability, we see that the product code has \(k=\Theta(n)\) and \(w=O(\sqrt{n})\) with high probability. The main result in \cite{arXiv:1311.0885} is to show that the product code actually has linear distance with high probability as well. To sum up, it is shown that we have a family of \([[n,k=c_1 n, d=c_2 n, w=c_3 \sqrt{n}]]\) codes given small enough \(c_1,c_2,c_3\).'

features:
  general_gates:
    - 'Universal set of gates can be obtained by fault-tolerantly mapping between different encoded representations of a given logical state \cite{arXiv:1807.09783}.'
  fault_tolerance:
    - 'Universal set of gates can be obtained by fault-tolerantly mapping between different encoded representations of a given logical state \cite{arXiv:1807.09783}.'

  decoders:
    - 'Union-find \cite{arXiv:2009.14226}.'

relations:
  parents:
    - code_id: fiber_bundle
      detail: 'Fiber-bundle code can be viewed as a homological product code with a twisted product.'
  cousins:
    - code_id: quantum_random
