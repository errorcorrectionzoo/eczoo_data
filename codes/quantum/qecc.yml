#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: qecc
#physical: bits
#logical: qubits

name: 'Quantum error-correcting code (QECC)'
short_name: 'QECC'

# Following Gottesman's book, but removed finite dims
description: 'Encodes quantum information in a (\textit{logical}) subspace of a (\textit{physical}) Hilbert space such that it is possible to recover said information from errors that act as linear maps on the physical space. The logical subspace is spanned by a basis comprised of \textit{code basis states} or \textit{codewords}. Codewords may not be normalizable if the physical Hilbert space in infinite, so approximate versions have to be constructed in practice.'

protection: |
  Denoting Hilbert spaces by the letter \(\mathsf{H}\), a quantum code \((U,\cal{E})\) is a partial isometry \(U:\mathsf{H}_{\text{logical}}\to\mathsf{H}_{\text{physical}}\) with a set of correctable errors \(\cal{E}\) with the following property: there exists a quantum operation \(\cal{D}\) such that for all \(E\in\cal{E}\) and states \(|\psi\rangle\in\mathsf{H}_{\text{logical}}\),
  \begin{align}
  {\cal D} (EU|\psi\rangle\langle\psi|U^{\dagger}E^{\dagger})=c(E,|\psi\rangle)|\psi\rangle\langle\psi|
  \end{align}
  for some constant \(c\).

  Equivalently, correction capability is determined by of the \textit{quantum error-correction conditions} \cite{arXiv:quant-ph/9604034,arXiv:quant-ph/9604024}, which may admit infinite terms due to non-normalizability of ideal code states. A code that satisfies these conditions approximately, i.e., up to some small quantifiable error, is called an \hyperref[code:approximate_qecc]{approximate code}.
# Include other often used defs

#notes:
#  - 'Bounds on n,k, or d for this class.'
#  - 'Links to code tables, github, GAP algebra packages, more papers \cite{arXiv:####.#####}.'

relations:
  parents:
    - code_id: oaecc
      detail: ''
# Add all children

#  cousins:
#    - code_id: ecc
#      detail: ''
