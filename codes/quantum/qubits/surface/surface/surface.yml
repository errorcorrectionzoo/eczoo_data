#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: surface
physical: qubits
logical: qubits

name: 'Kitaev surface code'
introduced: |
  \cite{doi:10.1070/RM1997v052n06ABEH002155,doi:10.1007/978-1-4615-5923-8_19,arXiv:quant-ph/9707021}

description: |
  A family of abelian topological \hyperref[code:css]{CSS stabilizer} codes
  whose generators are few-body \(X\)-type and \(Z\)-type Pauli strings
  associated to the stars and plaquettes, respectively, of a cellulation of a
  two-dimensional surface (with a qubit located at each edge of the
  cellulation). \textit{Toric code} often either refers to the construction on
  the two-dimensional torus or is an alternative name for the general
  construction. The construction on surfaces with boundaries is often called the
  \textit{planar code} \cite{arXiv:quant-ph/9811052}.

  The original construction can be naturally extended to arbitrary dimensional
  manifolds
  \cite{doi:10.1201/9781420035377-13,doi:10.1007/978-3-642-01877-0_21}. Given a
  cellulation, qubits are put on \(i\)-dimensional faces, \(X\)-type stabilizers
  are associated with \((i-1)\)-faces, while \(Z\)-type stabilizers are
  associated with \(i+1\)-faces.

  The stabilizers of the surface code on the 2-dimensional torus are generated
  by star operators \(A_v\) and plaquette operators \(B_p\).  Each star operator
  is a product of four Pauli-\(X\) operators on the edges adjacent to a vertex
  \(v\) of the lattice; each plaquette operator is a product of four Pauli-\(Z\)
  operators applied to the edges adjacent to a face, or plaquette, \(p\) of the
  lattice (\ref{figure:toric-code-operators}).

  \begin{figure}
    \includegraphics{toric-code-operators}
    \caption{Stabilizer generators and logical operators of the 2D surface
      code on a torus.  The star operators \(A_v\) and the plaquette operators
      \(B_p\) generate the stabilizer group of the toric code.  The logical
      operators are strings that wrap around the torus.}
    \label{figure:toric-code-operators}
  \end{figure}

  The two-dimensional toric code encodes two logical qubits.  We denote by
  \(\overline{X}_i,\overline{Z}_i\) the logical Pauli-\(X\) and Pauli-\(Z\)
  operator of the \(i\)-th logical qubit.  They can are represented by strings
  of Pauli-\(X\) operators or Pauli-\(Z\) operators that wrap around the torus
  as shown in \ref{figure:toric-code-operators}.



protection: |
  Toric code on an \(L\times L\) torus is a \([[2L^2,2,L]]\) CSS code, and there
  exists a planar code with \([[L^2,1,L]]\) \cite{arxiv:1111.4022}. More
  generally, the code distance is related to the homology of the cellulation
  \cite{arXiv:quant-ph/0110143}.

features:
  rate: |
    Rate depends on the underlying cellulation and manifold. For general 2D
    manifolds, \(kd^2\leq c(\log k)^2 n\) for some constant \(c\)
    \cite{arXiv:1301.6588}, meaning that (1) 2D surface codes with bounded
    geometry have distance scaling at most as \(O(\sqrt{n})\)
    \cite{arXiv:0909.5200,doi:10.1063/1.4726034}, and (2) surface codes with
    finite rate can only achieve an asymptotic minimum distance that is
    logarithmic in \(n\). Higher-dimensional hyperbolic manifolds (see code
    children below) yield distances scaling more favorably. Loewner's theorem
    provides an upper bound for any bounded-geometry surface code
    \cite{doi:10.1201/9781420035377-13}.

  transversal_gates: |
    Transversal Pauli gates exist and are based on non-trivial loops on surface.
    Transversal Clifford gates can be done on folded surface codes \cite{arxiv:1603.02286}.

  general_gates:
    - |
      Clifford gates can be implemented via lattice surgery
      \cite{arXiv:1111.4022,arXiv:1709.02318,arXiv:1808.02892,arXiv:2109.02746},
      twist-based lattice surgery \cite{arxiv:2201.05678}, or braiding defects
      \cite{arXiv:quant-ph/0610082,arXiv:quant-ph/0703143,arXiv:1208.0928,arXiv:1609.04673}.

    - |
      Non-Clifford gates require magic state distillation
      \cite{arXiv:1905.06903}, Dehn twists \cite{arxiv:1806.06078}, or
      just-in-time decoding \cite{arXiv:1903.11634}.
  # Last sentence valid for more general codes; possibly upgrade

  code_capacity_threshold:
    - 'For correlated Pauli noise, bounds on code capacity thresholds can be obtained by mapping the effect of noise on the code to a statistical mechanical model. The first such threshold, based on the planar code, is \(0.017\%\) \cite{arxiv:quant-ph/0110143}.'
    - |
      \(10.9\%\) (\(10.31\%\)) with pure \(Z\)-dephasing noise for square tiling
      using tensor-network \cite{arxiv:cond-mat/0106023,arxiv:1405.4883}
      (minimum-weight perfect matching \cite{arXiv:quant-ph/0207088}) decoder.
    - '\(18.9\%\) with depolarizing noise for square tiling \cite{arXiv:1202.1852}.'
    - '\(50\%\) with loss errors for square tiling \cite{arXiv:0904.3556}.'
    - '\(3.3\%\) with phenomenological noise for square tiling \cite{arXiv:quant-ph/0401101}.'
  threshold:
    - '\(0.5-1.1\%\) for various error models \cite{arXiv:1311.5003,arxiv:0811.0464}.'
  encoders:
    - 'Unitary \cite{arXiv:0712.0348,arXiv:2002.00362,arXiv:2110.02020}.'
    - 'Dissipative \cite{arXiv:1310.1036}.'
    - 'Stabilizer measurement-based \cite{arXiv:1404.2495}.'
  #make one that you feel is applicable to a large and interesting class of codes

  decoders:
    - |
      Minimum weight perfect-matching
      \cite{arXiv:quant-ph/0110143,doi:10.26421/QIC15.1-2-9}, union-find
      \cite{arXiv:1709.06218}, renormalization group
      \cite{doi:10.26421/QIC14.9-10-1,arXiv:1411.3028}, tensor network
      \cite{arXiv:1405.4883}, Markov chain Monte Carlo \cite{arXiv:1302.2669},
      cellular automaton \cite{arXiv:1511.05579}, machine learning
      \cite{arXiv:1610.04238,arXiv:1802.06441,arXiv:1810.07207}.

notes:
  - '\textit{Surfmap} framework provides a way to stitch the surface code to various superconducting-circuit geometries by assigning each superconducting qubit to be either a physical or ancilla qubit, designing stabilizer measurement circuits, and scheduling stabilizer measurements \cite{arxiv:2111.13729}.'

  - |
    2D and 3D surface code \href{http://gui.quantumcodes.io/}{visualization
    tool}.

  - |
    Tutorials from error-correction perspective by
    \href{https://boulderschool.yale.edu/2018/boulder-school-2018-lecture-notes}{J. Haah}
    and condensed-matter perspective by
    \href{https://boulderschool.yale.edu/2016/boulder-school-2016-lecture-notes}{M. Levin
    and C. Nayak}.

realizations:
  - |
    Distance-two surface codes have been implemented by Andersen et
    al. \cite{arXiv:1912.09410}, Erhard et al. \cite{arXiv:2006.03071}, Marques et al. \cite{arXiv:2102.13071},
    Google Quantum AI \cite{arxiv:2102.06132}, and both planar and toric versions by Bluvstein et al. \cite{arxiv:2112.03923}.

  - |
    Distance-three surface code implemented at ETH Zurich
    \cite{arxiv:2112.03708} and on the Zuchongzhi 2.1 superconducting quantum
    processor \cite{arxiv:2112.13505}.
  - |
    Signatures of corresponding topological phase of matter detected in
    superconducting circuits \cite{arxiv:2104.01180} and two-dimensional arrays
    of Rydberg atoms \cite{arXiv:2104.04119}.

relations:
  parents:
    - code_id: css
    - code_id: clifford-deformed_surface
      detail: 'CDSC is generally a non-CSS derivative of the surface code.'
    - code_id: topological_abelian
      detail: |
        When treated as ground states of the code Hamiltonian, the code states
        realize \(\mathbb{Z}_2\) topological order, a topological phase of
        matter that also exists in \(\mathbb{Z}_2\) lattice gauge theory
        \cite{doi:10.1063/1.1665530}.
  cousins:
    - code_id: hypergraph_product
      detail: |
        Planar (toric) code obtained from hypergraph product of two repetition
        (cyclic) codes.
