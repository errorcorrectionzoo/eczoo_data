#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: 2d_color
physical: qubits
logical: qubits

name: '2D color code'
introduced: '\cite{arxiv:quant-ph/0605138,arxiv:cond-mat/0607736}'

# alternative_names:
#   - 'Triangular color code'

description: |
  Color code defined on a two-dimensional planar graph.
  Each face hosts two stabilizer generators, a Pauli-\(X\) and a Pauli-\(Z\) string acting on all the qubits of the face.

  Most translation-invariant color codes are defined in trivalent planar graphs with three-colorable faces.
  The three admissible uniform tilings are the 6.6.6 (honeycomb) tiling, the 4.8.8 (square octagon) tiling, and the 4.6.12 tiling \cite[Fig. 1]{arxiv:1108.5738}.
  Non-uniform tilings include the [4.6.8, 6.8.8] and [4.6.8, 4.8.12] tilings \cite{arxiv:1801.08143}.
  More general admissible tilings can be obtained via a fattening procedure \cite{arxiv:cond-mat/0607736}; see also a construction based on the  more general quantum pin codes \cite{arxiv:1906.11394}.

  Logical dimension is determined by the genus of the underlying surface (for closed surfaces) and the types of boundaries (for open surfaces).
  There are three types of boundaries corresponding to the three colors of the faces \cite{arxiv:1311.0879,arxiv:1806.02820}.

  String operators are defined on the paths along the edges of the qubit.
  These paths can have branching points. Each path has two string operators, one corresponding to the \(X\) basis and one corresponding to the \(Z\) basis.
  In correspondence with the coloring of the lattice faces, string operators also come in three colors.
  A string of one color must end in a boundary of that same color.

# String operators commute or anti-commute.
# They anti-commute when they cross an odd number of times and have a different color and type.
# \begin{figure}
  #   \includegraphics{colorCodeHoneycombHighlightedChecksAdjColor.svg}
  #   \caption{Stabilizer generators and string operators of a 2D color code defined on a honeycomb tiling on a torus.
  #   The plaquette operators generate the stabilizer group of the toric code where each face corresponds to an X or Z plaquette operator.  The string operators
  #   are pairs of X and Z logical operators that wrap around the torus. There are only four independent string operators, so there are two independent colors for the string operators \cite{arxiv:1311.0277}.}
  #   \label{figure:toric-code-operators}
  # \end{figure}

# Each boundary of the triangle intersects the lattice such that it only touches faces of two colors. The color of the boundary is then the other third color.

#  The string-net for the 6.6.6 color code has a special geometry such that the \(X\) and Z logical qubits have the same geometry in a string-net. \(\{X_\mu, Z_\mu\} = 0\), where \(\mu\) denotes the string-net. Let \(\bar{X} = X_\mu\) and \(\bar{Z} = Z_\mu\), then \(\bar{X}\) and \(\bar{Z}\) have the same geometry.\cite{arxiv:1311.0879}

#   transversal_gates: 'Color codes admit a logical Hadamard gate because logical Paulis have the same geometry \cite{arxiv:1311.0879}.
# In general, the definition \(\widehat{P} = P^{\otimes V}\) doesn’t guarantee transversality, because though \(\widehat{P}Z_f\widehat{P}Z_f = Z_f\), \(\widehat{P}X_f\widehat{P} = (-1)^{\frac{t}{2}}X_fZ_f\), where \(t\) is the number of vertices of \(f\). Therefore, \(t\) must be a multiple of 4. This is only true for the 6.6.6 color code defined on the 4.8.8 lattice.\cite{arxiv:1311.0879}'


features:
  rate: 'For general 2D manifolds, \(kd^2 \leq c(\log k)^2 n\) for some constant \(c\) in what can be thought of as an extension of the \hyperref[topic:bpt-bound]{BPT bound} to codes on hyperbolic geometries \cite{arxiv:1301.6588}, meaning that color codes with finite rate can only achieve an asymptotic minimum distance that is logarithmic in \(n\).'

  transversal_gates:
    - 'CNOT gate because the code is CSS.'
    - 'Hadamard gates for any qubit geometry which yields a self-dual CSS code.'
    - 'Transversal \(S\) gate \cite{arxiv:quant-ph/0605138,arxiv:1108.5738}.'

  general_gates:
    - 'Magic-state distillation protocols \cite{doi:10.7907/059V-MG69}.'
    - 'Non-clifford gates can be implemented via \hyperref[topic:code-switching]{code switching} \cite{doi:10.7907/059V-MG69}.'

  decoders:
    - 'Projection decoder of \(O(n^4)\) complexity \cite{arxiv:1308.6207}, modified to account for syndrome errors \cite{arxiv:1402.3037}.'
    - 'Chromöbius, an open-source implementation of the Möbius decoder works for many 2D color codes \cite{arxiv:2312.08813}.'
    - 'Concatenated MPWM decoder \cite{arxiv:2404.07482}.'
    - 'Syndrome extraction circuits based on superdense coding and a middle-out strategy \cite{arxiv:2312.08813}.'
# Are we certain these work for all color code geometries?

relations:
  parents:
    - code_id: color
    - code_id: generalized_color
      detail: 'The generalized color code for \(G=\mathbb{Z}_2\) reduces to the 2D color code.'
    - code_id: twist_defect_color
      detail: 'Twist-defect color codes reduce to 2D color codes when there are no defects.
      See Ref. \cite{arxiv:2112.13617} for an alternative non-CSS extension of 2D color codes.'
    - code_id: qudit_color
      detail: 'Modular-qudit 2D color codes reduce to 2D color codes for \(q=2\).'
    - code_id: galois_color
      detail: 'Galois-qudit 2D color codes reduce to 2D color codes for \(q=2\).'
    - code_id: quantum_double_abelian
      detail: |
        When treated as ground states of the code Hamiltonian, states of the color code on a torus geometry realize \(\mathbb{Z}_2\times\mathbb{Z}_2\) topological order \cite{arxiv:0906.4127}, equivalent to the phase realized by two copies of the surface code via a local constant-depth \hyperref[topic:clifford]{Clifford circuit} \cite{arxiv:1503.02065}. 
        This process can be viewed as an ungauging \cite{arxiv:1202.3120,arxiv:1407.1025,arxiv:1603.04442,arxiv:1603.05182,arxiv:1605.01640,arxiv:1805.01836,arxiv:1806.08679,arXiv:2108.11402,arxiv:2310.16032,arxiv:2410.02213} of certain symmetries.
  cousins:
    - code_id: surface
      detail: 'The 2D color code is equivalent to multiple decoupled copies of the 2D surface code via a local constant-depth \hyperref[topic:clifford]{Clifford circuit} \cite{arxiv:1007.4601,arxiv:1503.02065,arxiv:1804.00866} and has the same topological entanglement entropy \cite{arxiv:0809.4276}.
      The convertion process can be viewed as an ungauging \cite{arxiv:1202.3120,arxiv:1407.1025,arxiv:1603.04442,arxiv:1603.05182,arxiv:1605.01640,arxiv:1805.01836,arxiv:1806.08679,arXiv:2108.11402,arxiv:2310.16032,arxiv:2410.02213} of certain symmetries.
      Conversely, the 2D color code can \hyperref[topic:code-switching]{condense} to form the 2D surface code in nine different ways, i.e., by adding two body hopping terms along one of its three triangular directions to the stabilizer group and then taking the center of the resulting nonabelian group \cite{arxiv:2212.00042}.
      Both the surface and 2D color codes can be constructed from two distinct types of lattices, namely, 4-valent and 3-valent 3-colorable lattices, respectively \cite{arxiv:1107.3502}.'
    - code_id: 3d_color
      detail: 'Gauge fixing can be used to \hyperref[topic:code-switching]{code switch} between 2D and 3D color codes, thereby yielding fault-tolerant computation with constant time overhead using only local quantum operations \cite{arxiv:1412.5079}. There is a fault-tolerant measurement-free scheme for \hyperref[topic:code-switching]{code switching} between 2D and 3D color codes \cite{arxiv:2410.13568}.'
    - code_id: binary_linear
      detail: 'As CSS codes, variants of the 2D color code are constructed out of self-dual classical codes on cubic planar graphs \cite{doi:10.1016/0095-8956(91)90066-S}.'
    - code_id: hamiltonian
      detail: '2D color code Hamiltonians can be simulated, with the help of perturbation theory, by two-dimensional weight-two (two-body) Hamiltonians with non-commuting terms \cite{arxiv:0906.4127}.'



# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2023-11-13'
    - user_id: CellaKove
      date: '2023-06-20'
