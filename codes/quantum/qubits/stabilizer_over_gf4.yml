#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: stabilizer_over_gf4
physical: qubits
logical: qubits

name: 'Stabilizer code over \(GF(4)\)'
introduced: '\cite{arXiv:quant-ph/9608006}'

description: |
  An \([[n,k,d]]\) stabilizer code whose encoding is based on a weakly self-dual additive quaternary code \((n, 2^{n-k}, d^*)_4\) with respect to the trace inner product where \(d \ge d^*\).
  The quaternary field \(GF(4)=\mathbf{F}_4\) consists of \(\{0, 1, w, \bar{w}\}\), with \(\bar{w} = w^2 = w + 1\), \(\mathrm{Tr}(x) = x+\bar{x}\), and trace inner product \(u * v = \mathrm{Tr}(u \cdot \bar{v})\).
  There is a mapping \(L\) between Pauli matrices \(I, Y, Z, X\) and \(0, 1, \bar{w}, w\), in turn \([A, B] \Leftrightarrow Tr\langle L(A), L(A)\rangle\).
  The classical self-dual code \(C\) over \(GF(4)^n\) corresponds to the stabilizer group \(\mathsf{S}\) while \(C^{\perp}\) corresponds to \(\mathsf{N(S)}\).

  The quaternary code needs to only be additive (its codewords are closed under addition). It need not be a linear code, which would require the set of codewords to be closed under multiplication as well.

protection: 'Detects errors on \(d-1\) qubits, corrects errors on \(\left\lfloor (d-1)/2 \right\rfloor\) qubits.'

notes:
  - 'Tables of \([[n,0,d]]\) codes, corresponding to a self-dual \(GF(4)\) representation, at \href{http://www.ii.uib.no/~larsed/vncorbits/}{this website}.'


relations:
  parents:
    - code_id: qubit_stabilizer
      detail: ''
  cousins:
    - code_id: q-ary_additive
      detail: 'Weakly self-dual quaternary (\(q=4\)) additive codes are used in this construction.'
