#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: subsystem_stabilizer
physical: qubits
logical: qubits

name: 'Subsystem qubit stabilizer code'
introduced: '\cite{arxiv:quant-ph/0508131}'

alternative_names:
  - 'Gauge qubit stabilizer code'

description: |
  A stabilizer code with some of its logical qubits denoted as \textit{gauge} qubits and not used for storage of logical information.
  Note that this doesn't lead to new codes but does lead to new error correction and fault tolerance procedures.
  Subsystem codes are denoted by \([[n,k,g,d]]\), similar to stabilizer codes, but with an extra parameter \(g\) denoting the number of gauge qubits.

  Subsystem qubit stabilizer codes are defined by a gauge group and a stabilizer group that, up to phase, forms the centralizer of the gauge group.
  The table below summarizes the relevant groups and their sizes for a subsystem qubit stabilizer code.
    \begin{table}
      \begin{cells}
      \celldata<c H, c H, c H>{purpose & symbol & size}
      \celldata<c, c, c>{
      gauge group & \(\mathsf{G}\) & \(4\cdot 2^{n-k+g}\)
          \\
      stabilizer group & \(\mathsf{S}\) & \(2^{n-k-g}\)
          \\
      code-preserving Paulis & \(\mathsf{N}(\mathsf{S})\) & \(4\cdot 2^{n+k+g}\)
          \\
      logical Paulis & \(\mathsf{N}(\mathsf{S})/\mathsf{G}\) & \(4^{k}\)
          \\
      gauge Paulis & \(\frac{\mathsf{N}(\mathsf{S})}{\mathsf{N}(\mathsf{S})/\mathsf{G}\times\left\langle i,\mathsf{S}\right\rangle }=\mathsf{G}/\left\langle i,\mathsf{S}\right\rangle\) & \(4^{g}\)
          \\
      gauge-preserving Paulis & \(\mathsf{N}(\mathsf{G})\) & \(4\cdot 2^{n+k-g}\)
          \\
      bare logicals & \(\mathsf{N}(\mathsf{G})/\left\langle i,\mathsf{S}\right\rangle\) & \(4^{k}\)
      }
      \end{cells}
      \caption{Groups relevant to subsystem qubit stabilizer codes. The centralizer \(\mathsf{N}(\mathsf{S})\) is the group formed by all elements of the \(n\)-qubit Pauli group that commute with all elements in \(\mathsf{S}\). 
      The notation \(\mathsf{N}\) is used because the centralizer of a stabilizer group \(\mathsf{S}\) is the same as the group's normalizer, the group formed by all elements of the \(n\)-qubit Pauli group that conjugate \(\mathsf{S}\) to itself.
      This equivalence is no longer the case for non-stabilizer Pauli groups, e.g., the normalizer of the Pauli group is the group itself, while its centralizer is just \(\langle i \rangle\).
      The gauge group and centralizer are defined so as to include \(i\) and its powers as elements, while the stabilizer group is not.}
      \label{table:subsystem-groups}
    \end{table}

  To create these codes proceed as follows.
  Choose \(2n\) operators \(\{ \tilde{X}_j,\tilde{Z}_j\}_{j=1}^n\) from \(\mathsf{P}_n\), the \hyperref[topic:pauli]{Pauli group} on \(n\) qubits, such that they obey the same commutation relations as the regular \(n\)-qubit Pauli generators \( \{X_j,Z_j\}_{j=1}^n \) (the subscript on these latter operators indicates the single qubit the Pauli matrix acts on).
  The tilde operators might act on more than one physical (or \textit{bare}) qubit but they behave as if they acted only on a single qubit.
  WLOG we can choose a stabilizer group as \( \mathsf{S} = \tilde{Z}_1,\dots, \tilde{Z}_s \rangle \). It follows that the normalizer of \(\mathsf{S} \) is \( \mathsf{N}(\mathsf{S}) = \langle i, \tilde{Z}_1,\dots, \tilde{Z}_n, \tilde{X}_{s+1},\dots, \tilde{X}_n \rangle \).
  We now choose a gauge group as \( \mathsf{G} = \langle i, \tilde{Z}_1,\dots, \tilde{Z}_s, \tilde{X}_{s+1}, \tilde{Z}_{s+1}, \dots, \tilde{X}_{s+g}, \tilde{Z}_{s+g} \rangle \) with \( s + g \leq n \).
  The logical group is chosen as \( \mathsf{L} = \mathsf{N}(\mathsf{S})/\mathsf{G} \simeq \langle \tilde{X}_{s+g+1},\tilde{Z}_{s+g+1}, \dots, \tilde{X}_n,\tilde{Z}_n \rangle \).
  Now the codespace \( C \) is as usual the \(+1\) eigenspace of the stabilizer \( \mathsf{S} \).
  But the gauge and logical groups have further decomposed this space into \( C = A \otimes B \simeq (\mathbb{C}^2)^{\otimes k} \otimes (\mathbb{C}^2)^{\otimes g} \).
  Thus the Hilbert space is partitioned into 3 sets; \(k\) logical qubits, \(g\) gauge qubits, and \(s\) error-syndrome qubits, with \(s+g+k=n\).



protection: |
  Detects errors on \(d-1\) qubits, corrects errors on \(\left\lfloor (d-1)/2 \right\rfloor\) qubits.

  There is the following analogue of the \term{Knill-Laflamme conditions} for subsystem qubit stabilizer codes.
  A set of errors \( \{ E_a \} \) is correctable iff \( E_aE_b \not\in \mathsf{N}(\mathsf{S}) \setminus \mathsf{G} \) for all pairs \(a,b\). The distance of the code is the minimal weight of operators in \( \mathsf{N}(\mathsf{S}) \setminus \mathsf{G}\).

  Entropic conditions have been formulated for random projective measurement noise \cite{arxiv:2402.00145}.

features:
  encoders:
    - 'A subsystem codeword can be encoded with the Clifford circuits of the stabilizer code corresponding to treating all gauge qubits as logical qubits. One can use the standard-form or the conjugation method \cite{arxiv:0806.4954,arxiv:0810.2574}.'
  general_gates:
    - 'Logical \hyperref[topic:clifford]{Clifford gates} can be implemented fault-tolerantly for subsystem codes of distance at least three \cite{arxiv:2210.14074}.'
  code_capacity_threshold:
    - 'For correlated Pauli noise, bounds can be obtained by mapping the effect of noise on the code to a statistical mechanical model \cite{arxiv:1809.10704}.'
  fault_tolerance:
    - 'Logical \hyperref[topic:clifford]{Clifford gates} can be implemented fault-tolerantly for subsystem codes of distance at least three \cite{arxiv:2210.14074}.'


notes:
  - 'See Ref. \cite{arxiv:1009.2203} for algorithms and lists of possible tilings of particular subsystem codes.'
  - 'Subsystem qubit stabilizer codes can be used to estimate logical Pauli noise for any correctable physical noise \cite{arxiv:2209.09267}.'
  - 'Subsystem qubit stabilizer codes with two or more gauge qubits admit quantum contextuality \cite{arxiv:2502.02553}.'


relations:
  parents:
    - code_id: subsystem_qubits_into_qubits
    - code_id: qudit_subsystem_stabilizer
      detail: 'Subsystem modular-qudit stabilizer codes reduce to subsystem qubit stabilizer codes for qudit dimension \(q=2\).'
    - code_id: galois_subsystem_stabilizer
      detail: 'Subsystem Galois-qudit stabilizer codes reduce to subsystem qubit stabilizer codes for qudit dimension \(q=2\).'
    - code_id: qubit_stabilizer_oaqecc
      detail: 'An OA qubit stabilizer code storing no classical information but retaining gauge qubits for its quantum code is a subsystem qubit stabilizer code.'
  cousins:
    - code_id: qubit_stabilizer
      detail: |
        Subsystem qubit stabilizer codes reduce to qubit stabilizer codes when there are no gauge qubits.
        An \([[n,k,d]]\) qubit stabilizer code can be converted into an \hyperref[topic:asymptotics]{order} \([[O(\ell \delta n),k,\Omega(d/w)]]\) subsystem qubit stabilizer code with weight-three gauge operators via the wire-code mapping \cite{arxiv:2410.10194}, which uses \hyperref[topic:weight-reduction]{weight reduction}. 
        Here, \(w\) and \(\delta\) are the weight and degree of the input code's Tanner graph, while \(\ell\) is the length of the longest edge of a particular embedding of that graph.
    - code_id: q-ary_bch
      detail: 'BCH codes yield subsystem stabilizer codes via the subsystem extension of the Hermitian construction to subsystem codes \cite[Exam. 1]{arxiv:quant-ph/0610153}.'
    - code_id: reed_solomon
      detail: 'Primitive RS codes yield subsystem stabilizer codes via the subsystem extension of the Hermitian construction to subsystem codes \cite[Exam. 3]{arxiv:quant-ph/0610153}.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: PhilippeFaist
      date: '2025-08-27'
    - user_id: VictorVAlbert
      date: '2025-08-27'
    - user_id: VictorVAlbert
      date: '2022-03-17'
    - user_id: VictorVAlbert
      date: '2021-12-16'
    - user_id: EricKubischta
      date: '2021-12-14'
