name: 'Test build of EC zoo'

on: [push]
  # push:
  #   branches: [ $default-branch ]
  # pull_request:
  #   branches: [ $default-branch ]

jobs:
  TestBuildZoo:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: ./eczoo_data

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Inspect files (debug)
        run: |
          pwd
          echo $GITHUB_WORKSPACE
          echo
          ls -lh
          echo
          ls -lh ..
          echo
          ls -lh ../..

      - name: Check out ec-zoo generator
        run: |
          git clone https://github.com/errorcorrectionzoo/eczoo_generator.git --depth=1 ecczoo_generator

      - run: echo "💡 The 'errorcorrectionzoo/ecczoo_generator' repository has been cloned to the runner."

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - run: echo "Installed python."

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - run: echo "Installed poetry."

      - run: |
          (cd ecczoo_generator && poetry install)

      - run: echo "Installed ecczoo_generator virtual environment, etc."

      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: 'Try to build the zoo!'
        run: |
          (cd ecczoo_generator && poetry run python generate_ecc_zoo.py --verbose)

      - name: 'Report success message'
        run: |
          echo "✅ Zoo was successfully built! 🐘"
      
